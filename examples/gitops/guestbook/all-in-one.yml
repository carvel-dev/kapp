---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: redis-primary
  labels:
    app: redis
    tier: backend
    role: primary
spec:
  ports:
  - port: 6380
    targetPort: 6380
  selector:
    app: redis
    tier: backend
    role: primary
---
apiVersion: apps/v1 #!  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  namespace: default
  name: redis-primary
spec:
  selector:
    matchLabels:
      app: redis
      role: primary
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/redis:e2e  #! or just image: redis
        resources:
          requests:
            cpu: 120m
            memory: 100Mi
        ports:
        - containerPort: 6380
        env:
        - name: FOO
          value: FOO
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: redis-replica
  labels:
    app: redis
    tier: backend
    role: replica
spec:
  ports:
  - port: 6380
  selector:
    app: redis
    tier: backend
    role: replica
---
apiVersion: apps/v1 #!  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  namespace: default
  name: redis-replica
spec:
  selector:
    matchLabels:
      app: redis
      role: replica
      tier: backend
  replicas: 2
  template:
    metadata:
      labels:
        app: redis
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: gcr.io/google_samples/gb-redisslave:v1 # wokeignore:rule=slave
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
          #! If your cluster config does not include a dns service, then to
          #! instead access an environment variable to find the master
          #! service's host, comment out the 'value: dns' line above, and
          #! uncomment the line below:
          #! value: env
        ports:
        - containerPort: 6380
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  #! if your cluster supports it, uncomment the following to automatically create
  #! an external load-balanced IP for the frontend service.
  #! type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend
---
apiVersion: apps/v1 #!  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  namespace: default
  name: frontend
spec:
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  replicas: 3
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: php-redis
        image: gcr.io/google-samples/gb-frontend:v4
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
          #! If your cluster config does not include a dns service, then to
          #! instead access environment variables to find service host
          #! info, comment out the 'value: dns' line above, and uncomment the
          #! line below:
          #! value: env
        ports:
        - containerPort: 80
